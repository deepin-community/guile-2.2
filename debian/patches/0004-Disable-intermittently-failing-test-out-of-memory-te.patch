From 2b2f3dd4fd1e9db5714e3be94b3309b251a3da29 Mon Sep 17 00:00:00 2001
From: Rob Browning <rlb@defaultvalue.org>
Date: Tue, 20 Feb 2018 23:58:09 -0600
Subject: Disable intermittently failing test-out-of-memory test for now

After checking with upstream, disable a test-out-of-memory test that
appears to have been causing a FTBS on a number of architectures.

(Running test-suite/standalone/test-out-of-memory in a loop reproduces
 the problem very quickly on amd64 here.)

Bug-Debian: https://bugs.debian.org/880148
---
 test-suite/standalone/test-out-of-memory | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/test-suite/standalone/test-out-of-memory b/test-suite/standalone/test-out-of-memory
index 221651270..bef90c994 100755
--- a/test-suite/standalone/test-out-of-memory
+++ b/test-suite/standalone/test-out-of-memory
@@ -65,11 +65,11 @@ exec guile -q -s "$0" "$@"
         ;; Likewise for a bytevector.  This is different from the above,
         ;; as the elements of a bytevector are not traced by GC.
         (make-bytevector #e1e9)))
-(test (lambda ()
-        ;; This one is the kicker -- we allocate pairs until the heap
-        ;; can't expand.  This is the hardest test to deal with because
-        ;; the error-handling machinery has no memory in which to work.
-        (iota #e1e8)))
+;; (test (lambda ()
+;;         ;; This one is the kicker -- we allocate pairs until the heap
+;;         ;; can't expand.  This is the hardest test to deal with because
+;;         ;; the error-handling machinery has no memory in which to work.
+;;         (iota #e1e8)))
 (test (lambda ()
         ;; The same, but also causing allocating during the unwind
         ;; (ouch!)
